name: CI

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 2 * * 0'

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
  SOLANA_VERSION: v1.15.0
  PROGRAM_KEYPAIR: ./.github/keys/multisig_lite-keypair.json

defaults:
  run:
    shell: bash

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Run cargo fmt
        run: cargo fmt --all --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - run: cargo clippy --all-features --all-targets

  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Run cargo check
        run: |
          cargo check -q --all-features --all-targets --bins --examples

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Run cargo test
        run: |
          cargo test --all-features --all-targets --bins --examples 2>/dev/null

  test-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Run cargo test --doc
        run: cargo test --doc 2>/dev/null

  build-sbf:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Install Solana and SBF toolchain
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/$SOLANA_VERSION/install)"
      - name: Add solana command to the PATH environment
        run: |
          echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        shell: bash
      - name: Run cargo build-sbf
        run: cargo build-sbf --workspace

  test-sbf:
    runs-on: ubuntu-latest
    # It fails on github action with ProgramEnvironmentSetupFailure as in [1].
    #
    # [1]: https://github.com/keithnoguchi/multisig-lite/actions/runs/4159866695/jobs/7196318696
    if: ${{ false }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Install Solana and SBF toolchain
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/$SOLANA_VERSION/install)"
      - name: Add solana command to the PATH environment
        run: |
          echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        shell: bash
      # This cargo build-spf and then cargo build-bpf is required to avoid
      # the InvalidAccountData error.
      - name: Run cargo build-sbf
        run: cargo build-sbf
      - name: Run cargo build-bpf
        run: cargo build-bpf -q
      - name: Run cargo test-sbf
        run: cargo test-sbf -q --workspace

  run-examples:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Install Solana and SBF toolchain
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/$SOLANA_VERSION/install)"
      - name: Add solana command to the PATH environment
        run: |
          echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        shell: bash
      - name: Run cargo build-sbf
        run: cargo build-sbf --workspace --features localnet
      - name: Create a default signer
        run: solana-keygen new --no-bip39-passphrase
      - name: Use the local cluster
        run: solana config set -u localhost
      - name: Run the local validator
        run: solana-test-validator -r -q &
      - name: Deploy the program
        run: |
          solana program deploy --program-id $PROGRAM_KEYPAIR ./target/deploy/multisig_lite.so
      - name: Run create example
        run: cargo run -q --features localnet --example create -- -m 1
      - name: Run fund example
        run: cargo run -q --features localnet --example fund -- --lamports 1000000000
      - name: Run get-fund example
        run: cargo run -q --features localnet --example get-fund
      - name: Run create-transfer example
        run: cargo run -q --features localnet --example create-transfer
      - name: Run get-transfers example
        run: cargo run -q --features localnet --example get-transfers
      - name: Run get-state example
        run: cargo run -q --features localnet --example get-state
      - name: Run approve example
        run: cargo run -q --features localnet --example approve
      - name: Run get-state example
        run: cargo run -q --features localnet --example get-state
      - name: Run close example
        run: cargo run -q --features localnet --example close

  anchor-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Install Solana and BPF toolchain
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/$SOLANA_VERSION/install)"
      - name: Add solana command to the PATH environment
        run: |
          echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        shell: bash
      - name: Install Anchor-cli
        run: cargo install anchor-cli
      - name: Run anchor build
        run: anchor build

  anchor-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Install Solana and BPF toolchain
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/$SOLANA_VERSION/install)"
      - name: Add solana command to the PATH environment
        run: |
          echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        shell: bash
      - name: Install JS/TS modules
        run: yarn
      - name: Install Anchor-cli
        run: cargo install anchor-cli
      - name: Create a default signer
        run: solana-keygen new --no-bip39-passphrase
      - name: Use the local cluster
        run: solana config set -u localhost
      - name: Run the local validator
        run: anchor run validator
      - name: Run anchor build
        run: anchor build -- --features localnet
      - name: Copy the program keypair file
        run: anchor run cp-program-keypair
      - name: Run anchor test
        run: anchor test --skip-local-validator --skip-build

  app-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install JS/TS modules
        working-directory: app
        run: yarn
      - name: Lint the app
        working-directory: app
        run: yarn lint

  app-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install JS/TS modules
        working-directory: app
        run: yarn
      - name: Check the app
        working-directory: app
        run: yarn check

  app-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Install JS/TS modules
        working-directory: app
        run: yarn
      - name: Build the app
        working-directory: app
        run: yarn build
